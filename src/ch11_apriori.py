# -*- coding: utf-8 -*-
"""
Created on Mon Dec 11 21:12:56 2017
关联规则挖掘算法apriori模板
@author: Burning
"""

def 构造小样例():
    return [[1, 3, 4], [2, 3, 5], [1, 2, 3, 5], [2, 5]]

def 构造基本项集(数据项集):
    基本项 = []
    for 条目 in 数据项集:
        for 元素 in 条目:
            if [元素] not in 基本项:
                基本项.append([元素])
    #基本项.sort()
    return list(map(frozenset, 基本项))

def 由候选项集得到频繁项集及支持度(数据项集, 候选项集, 最小支持度):
    候选项集累计 = {}
    for 条目的集合 in 数据项集:
        for 项集 in 候选项集:
            if 项集.issubset(条目的集合):
                候选项集累计[项集] = 候选项集累计.get(项集, 0) + 1
    条目数 = len(数据项集)
    频繁项集 = []
    支持度集 = {}
    for 项集 in 候选项集累计:
        支持度 = 候选项集累计[项集] / 条目数
        if 支持度 >= 最小支持度:
            频繁项集.append(项集)
            支持度集[项集] = 支持度
    return 频繁项集, 支持度集

def 由频繁项集构造下一步候选项集(频繁项集, 候选项集长度):
    候选项集 = []
    for i in range(len(频繁项集)):
        for j in range(i+1, len(频繁项集)):
            if sorted(list(频繁项集[i])[:int(候选项集长度)-2]) == sorted(list(频繁项集[j])[:int(候选项集长度)-2]):
                候选项集.append(频繁项集[i] | 频繁项集[j])
            #这里巧妙的简化计算并去重，即只合并最后一项不同的两个频繁项集
    return 候选项集
#由长度k-1的频繁项集得到长度k的候选项集

def 得到所有频繁项集及支持度(数据集, 最小支持度=0.5):
    数据项集 = list(map(set, 数据集))
    候选项集1 = 构造基本项集(数据项集)
    频繁项集1, 支持度数据 = 由候选项集得到频繁项集及支持度(数据项集, 候选项集1, 最小支持度)
    频繁项集 = [频繁项集1]
    长度k = 2
    while len(频繁项集[长度k - 2]):
        长度k候选项集 = 由频繁项集构造下一步候选项集(频繁项集[长度k - 2], 长度k)
        长度k频繁项集, 长度k支持度数据 = 由候选项集得到频繁项集及支持度(数据项集, 长度k候选项集, 最小支持度)
        支持度数据.update(长度k支持度数据)
        频繁项集.append(长度k频繁项集)
        长度k += 1
    return 频繁项集, 支持度数据

def 计算可信度(频繁项, 后果备选项集, 支持度数据, 关联规则列表, 最小可信度=0.7):
    可作后果项集 = []
    for 后果 in 后果备选项集:
        可信度 = 支持度数据[频繁项] / 支持度数据[频繁项 - 后果]
        if 可信度 > 最小可信度:
            关联规则列表.append((频繁项-后果, 后果, 可信度))
            可作后果项集.append(后果)
            print(频繁项-后果, '-->', 后果, '可信度:', 可信度)
    return 可作后果项集

def 从后果扩展规则(频繁项, 后果备选项集, 支持度数据, 关联规则列表, 最小可信度=0.7):
    后果长度 = len(后果备选项集[0])
    if len(频繁项) > (后果长度 + 1):
        大一号的后果备选项集 = 由频繁项集构造下一步候选项集(后果备选项集, 后果长度+1)
        大一号的后果备选项集 = 计算可信度(频繁项, 大一号的后果备选项集, 支持度数据, 关联规则列表, 最小可信度)
        if len(大一号的后果备选项集) > 1:
            从后果扩展规则(频繁项, 大一号的后果备选项集, 支持度数据, 关联规则列表, 最小可信度)

def 生成关联规则(频繁项集, 支持度数据, 最小可信度=0.7):
    关联规则列表 = []
    for i in range(1, len(频繁项集)):#从两个元素的开始寻找关联规则
        for 频繁项 in 频繁项集[i]:
            后果备选项集 = [frozenset([元素]) for 元素 in 频繁项]
            if i > 1:
                从后果扩展规则(频繁项, 后果备选项集, 支持度数据, 关联规则列表, 最小可信度)
            else:
                计算可信度(频繁项, 后果备选项集, 支持度数据, 关联规则列表, 最小可信度)

数据集 = 构造小样例()
频繁项集, 支持度数据 = 得到所有频繁项集及支持度(数据集, 0.5)
关联规则 = 生成关联规则(频繁项集, 支持度数据, 0.7)